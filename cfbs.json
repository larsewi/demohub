{
  "name": "demohub",
  "type": "policy-set",
  "description": "CFEngine demo policy",
  "build": [
    {
      "name": "masterfiles",
      "description": "Official CFEngine Masterfiles Policy Framework (MPF).",
      "tags": ["supported", "base"],
      "repo": "https://github.com/cfengine/masterfiles",
      "by": "https://github.com/cfengine",
      "version": "3.21.0",
      "commit": "379c69aa71ab3069b2ef1c0cca526192fa77b864",
      "added_by": "cfbs add",
      "steps": ["run ./prepare.sh -y", "copy ./ ./"]
    },
    {
      "name": "./def.json",
      "description": "Local augments file added using cfbs command line",
      "tags": ["local"],
      "added_by": "cfbs add",
      "steps": ["json ./def.json def.json"]
    },
    {
      "name": "./churn_local_users.cf",
      "description": "Local policy file added using cfbs command line",
      "tags": ["local"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./churn_local_users.cf services/cfbs/churn_local_users.cf",
        "policy_files services/cfbs/churn_local_users.cf",
        "bundles churn_local_users"
      ]
    },
    {
      "name": "./script_monkey.py",
      "description": "Script monkey",
      "tags": ["local"],
      "added_by": "cfbs add",
      "steps": ["copy ./script_monkey.py script_monkey.py"]
    },
    {
      "name": "library-for-promise-types-in-python",
      "description": "Library enabling promise types implemented in python.",
      "tags": ["supported", "library"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/cfengine",
      "version": "0.2.1",
      "commit": "70afe61739bbb2cfc205dc0b604fbdda96b6be43",
      "subdirectory": "libraries/python",
      "added_by": "promise-type-groups",
      "steps": ["copy cfengine.py modules/promises/"]
    },
    {
      "name": "promise-type-groups",
      "description": "Experimental promise type to manage local user groups.",
      "tags": ["supported", "promise-type", "experimental"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/larsewi",
      "version": "0.2.3",
      "commit": "70afe61739bbb2cfc205dc0b604fbdda96b6be43",
      "subdirectory": "promise-types/groups",
      "dependencies": ["library-for-promise-types-in-python"],
      "added_by": "cfbs add",
      "steps": [
        "copy groups.py modules/promises/",
        "append enable.cf services/init.cf"
      ]
    },
    {
      "name": "./churn_local_groups.cf",
      "description": "Local policy file added using cfbs command line",
      "tags": ["local"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./churn_local_groups.cf services/cfbs/churn_local_groups.cf",
        "policy_files services/cfbs/churn_local_groups.cf",
        "bundles churn_local_groups"
      ]
    },
    {
      "name": "cfengine-supported",
      "description": "Adds reporting data (inventory) for the support status for the current version of CFEngine.",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-supported",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "6a09cc850423a063533ffe19e9066753952b9d8d",
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory-cfengine-version-support-status.cf services/cfengine-supported/",
        "json ./cfbs/def.json def.json"
      ]
    },
    {
      "name": "compliance-report-imports",
      "description": "Used by other modules to import compliance reports to Mission Portal.",
      "tags": ["experimental", "cfengine-enterprise"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.8",
      "commit": "06f0894b662befbba4e775884f21cfe8573c32d6",
      "subdirectory": "./compliance-report-imports",
      "dependencies": ["autorun"],
      "added_by": "compliance-report-lynis",
      "steps": ["copy ./compliance-report-imports.cf services/autorun/"]
    },
    {
      "name": "lynis",
      "description": "Automates the installation, running, and reporting of CISOfy's lynis system audits.",
      "tags": ["security", "compliance", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-lynis",
      "by": "https://github.com/nickanderson",
      "version": "0.3.2",
      "commit": "da3dc477846d4885688aba93f4f0df38dd14bf53",
      "added_by": "compliance-report-lynis",
      "steps": [
        "copy policy/main.cf services/lynis/main.cf",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "autorun",
      "description": "Enables autorun functionality.",
      "tags": ["supported", "management"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/olehermanse",
      "version": "1.0.1",
      "commit": "c3b7329b240cf7ad062a0a64ee8b607af2cb912a",
      "subdirectory": "management/autorun",
      "added_by": "compliance-report-imports",
      "steps": ["json def.json def.json"]
    },
    {
      "name": "compliance-report-lynis",
      "description": "Compliance report with Lynis checks.",
      "tags": ["experimental", "security", "compliance"],
      "repo": "https://github.com/nickanderson/cfengine-lynis",
      "by": "https://github.com/nickanderson/",
      "version": "0.0.2",
      "commit": "60ad7321d6b5e30606830d3228812fe3f77c4fa8",
      "subdirectory": "./compliance-reports",
      "dependencies": ["compliance-report-imports", "lynis"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./generated-compliance-report.json .no-distrib/compliance-report-definitions/lynis-compliance-report.json"
      ]
    },
    {
      "name": "compliance-report-os-is-vendor-supported",
      "description": "Compliance report definition for checking if the current OS version is supported by the vendor.",
      "tags": ["experimental", "compliance-report", "cfengine-enterprise"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.4",
      "commit": "d828be6de5b73b0058e4367c2ab09bda1cf035ca",
      "subdirectory": "./compliance-report-os-is-vendor-supported",
      "dependencies": ["compliance-report-imports"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./os-is-vendor-supported.json .no-distrib/compliance-report-definitions/os-is-vendor-supported.json"
      ]
    },
    {
      "name": "cron-access",
      "description": "Limits access to cron-related files in /etc by setting user, group, and permission bits.",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/olehermanse",
      "version": "0.0.1",
      "commit": "e5b64e3bf390b3b27e0efce29af9a1c354ed54f1",
      "subdirectory": "security/cron-access",
      "added_by": "cfbs add",
      "steps": [
        "copy cron-access.cf services/cfbs/modules/cron-access/cron-access.cf",
        "bundles cron_access",
        "policy_files services/cfbs/modules/cron-access/cron-access.cf"
      ]
    },
    {
      "name": "./script_monkey.cf",
      "description": "Local policy file added using cfbs command line",
      "tags": ["local"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./script_monkey.cf services/cfbs/script_monkey.cf",
        "policy_files services/cfbs/script_monkey.cf",
        "bundles script_monkey"
      ]
    },
    {
      "name": "cve-2021-3156-sudo",
      "description": "Reporting data (inventory) and remediaton for CVE-2021-3156, a heap overflow in sudo that allows privilege escalation.",
      "tags": ["supported", "security", "cve", "sudo"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "029ec4eac0d3d9b3bf7c8dc361db71f4796fc101",
      "subdirectory": "./cves/cve-2021-3156-sudo",
      "added_by": "cfbs add",
      "steps": [
        "copy ./cve-2021-3156-sudo.cf services/security-hardening/cves/cve-2021-3156-sudo/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "default-encrypt-method-sha512",
      "description": "Sets the default password hashing algorithm to SHA-512 (encrypt_method in the /etc/login.defs file).",
      "tags": ["supported", "security"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.3",
      "commit": "124b01041a3d45010ac20912338795e81e2a06fe",
      "subdirectory": "default-encrypt-method-sha512",
      "added_by": "cfbs add",
      "steps": [
        "json cfbs/def.json def.json",
        "copy policy/default-encrypt-method-sha512.cf services/security-hardening/default-encrypt-method-sha512/default-encrypt-method-sha512.cf"
      ]
    },
    {
      "name": "delete-home-dotrhosts",
      "description": "Ensures that ~/.rhosts files are not present, as they present a security risk.",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/nickanderson",
      "version": "1.0.0",
      "commit": "9a28d03dbb1f62401c9b4c898524f8304f93fd19",
      "subdirectory": "security/delete-home-dotrhosts",
      "added_by": "cfbs add",
      "steps": [
        "copy policy/main.cf services/cfbs/delete-home-dotrhosts/",
        "policy_files services/cfbs/delete-home-dotrhosts/",
        "bundles delete_home_dotrhosts:main"
      ]
    },
    {
      "name": "./install_packages.cf",
      "description": "Local policy file added using cfbs command line",
      "tags": ["local"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./install_packages.cf services/cfbs/install_packages.cf",
        "policy_files services/cfbs/install_packages.cf",
        "bundles install_packages"
      ]
    },
    {
      "name": "disable-prelinking",
      "description": "Disables prelinking.",
      "tags": ["supported", "security"],
      "repo": "https://github.com/larsewi/cfengine-prelinking-disabled",
      "by": "https://github.com/larsewi",
      "version": "1.0.3",
      "commit": "4b309622404e6a6e989989a229fe780bec029de5",
      "dependencies": ["autorun"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./disable_prelinking.cf services/autorun/disable_prelinking.cf"
      ]
    },
    {
      "name": "./enable_report_dumps.cf",
      "description": "Local policy file added using cfbs command line",
      "tags": ["local"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./enable_report_dumps.cf services/cfbs/enable_report_dumps.cf",
        "policy_files services/cfbs/enable_report_dumps.cf",
        "bundles enable_report_dumps"
      ]
    },
    {
      "name": "cve-2021-44228-log4j",
      "description": "Leverages yahoo/check-log4j to scan for files potentially vulnerable to CVE-2021-44228, which allows arbitrary code execution.",
      "tags": ["supported", "security", "cve", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.2.0",
      "commit": "bdc7a16c6e52ff44149eb2abfd510fcee12dd2c1",
      "subdirectory": "./cves/cve-2021-44228-log4j",
      "added_by": "cfbs add",
      "steps": [
        "copy ./cve-2021-44228-log4j-inventory-log4shell.cf services/security-hardening/cves/cve-2021-44228-log4j/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "delete-files",
      "description": "Allows you to specify a list of files you want deleted on hosts in your infrastructure. When this module is deployed as part of your policy set, every time CFEngine runs, it will check if those files exist, and delete them if they do.",
      "tags": ["supported", "management"],
      "repo": "https://github.com/nickanderson/cfengine-delete-files",
      "by": "https://github.com/nickanderson",
      "version": "1.0.0",
      "commit": "40bdc143e614a8dfb36eceef4060f322204ebe61",
      "input": [
        {
          "type": "list",
          "variable": "files",
          "namespace": "delete_files",
          "bundle": "delete_files",
          "label": "Files",
          "subtype": [
            {
              "key": "path",
              "type": "string",
              "label": "Path",
              "question": "Path to file"
            },
            {
              "key": "why",
              "type": "string",
              "label": "Why",
              "question": "Why should this file be deleted?",
              "default": "Unknown"
            }
          ],
          "while": "Specify another file you want deleted on your hosts?"
        }
      ],
      "added_by": "cfbs add",
      "steps": [
        "copy delete-files.cf services/cfbs/modules/delete-files/delete-files.cf",
        "input delete-files/input.json def.json",
        "bundles delete_files:delete_files",
        "policy_files services/cfbs/modules/delete-files/delete-files.cf"
      ]
    },
    {
      "name": "enable-aslr",
      "description": "Ensures that Address space layout randomization (ASLR) is enabled on the system.",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/craigcomstock",
      "version": "1.0.0",
      "commit": "6805332200dd48db54c61178c90bf2374c5d8fca",
      "subdirectory": "security/enable-aslr",
      "added_by": "cfbs add",
      "steps": [
        "copy enable-aslr.cf services/cfbs/modules/enable-aslr/enable-aslr.cf",
        "bundles enable_aslr",
        "policy_files services/cfbs/modules/enable-aslr/enable-aslr.cf"
      ]
    },
    {
      "name": "etc-issue-access",
      "description": "Limits access to the /etc/issue file by setting user, group, and permission bits.",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/olehermanse",
      "version": "0.0.1",
      "commit": "36ff5729aeba97d72bdadfdb53bb4cc19c81f900",
      "subdirectory": "security/etc-issue-access",
      "added_by": "cfbs add",
      "steps": [
        "copy etc-issue-access.cf services/cfbs/modules/etc-issue-access/etc-issue-access.cf",
        "bundles etc_issue_access",
        "policy_files services/cfbs/modules/etc-issue-access/etc-issue-access.cf"
      ]
    },
    {
      "name": "etc-motd-access",
      "description": "Limits access to the /etc/motd file by setting user, group, and permission bits.",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/olehermanse",
      "version": "0.0.1",
      "commit": "2c54a98a05bb0315c7a5b9b2edf17a629f151563",
      "subdirectory": "security/etc-motd-access",
      "added_by": "cfbs add",
      "steps": [
        "copy etc-motd-access.cf services/cfbs/modules/etc-motd-access/etc-motd-access.cf",
        "bundles etc_motd_access",
        "policy_files services/cfbs/modules/etc-motd-access/etc-motd-access.cf"
      ]
    },
    {
      "name": "inventory-clamav",
      "description": "Adds reporting data (inventory) for useful information from ClamAV (version, definitions version, definitions date).",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-clamav",
      "by": "https://github.com/nickanderson",
      "version": "1.1.0",
      "commit": "b7de8aed5fba718a88ca008c09fabd152c56df24",
      "added_by": "cfbs add",
      "steps": [
        "copy policy/main.cf services/inventory-clamav/main.cf",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "etc-issue-content",
      "description": "Manages the content of /etc/issue and provides limited inventory of it's content.",
      "tags": ["supported", "security", "compliance", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-etc_issue_content",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "459939185974e93bf5504da3393bc4de5a54e617",
      "input": [
        {
          "type": "string",
          "variable": "body",
          "namespace": "etc_issue_content",
          "bundle": "main",
          "label": "Text",
          "question": "What is the content that should be in /etc/issue?"
        }
      ],
      "added_by": "cfbs add",
      "steps": [
        "copy main.cf services/cfbs/modules/etc-issue-content/main.cf",
        "bundles etc_issue_content:main",
        "policy_files services/cfbs/modules/etc-issue-content/main.cf",
        "input etc-issue-content/input.json def.json"
      ]
    },
    {
      "name": "inventory-etc-hosts",
      "description": "Adds reporting data (inventory) for entries from the /etc/hosts file.",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-etc-hosts",
      "by": "https://github.com/nickanderson",
      "version": "0.1.3",
      "commit": "c4cac4bfa0f2c0a6caf83517dcaaaf17e70808a0",
      "added_by": "cfbs add",
      "steps": [
        "copy policy/main.cf services/inventory-etc-hosts/main.cf",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-etc-login-defs",
      "description": "Adds reporting data (inventory) for useful bits from the /etc/login.defs file.",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-etc-login-defs",
      "by": "https://github.com/nickanderson",
      "version": "0.0.3",
      "commit": "8f4747e4856737aa44fd96b9b8d38d941afec9f3",
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory-etc-login-defs.cf services/inventory-etc-login-defs/inventory-etc-login-defs.cf",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-fips-mode-setup",
      "description": "Adds reporting data (inventory) for the status of fips-mode-setup.",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-fips-mode-setup",
      "by": "https://github.com/nickanderson",
      "version": "0.1.1",
      "commit": "757aa0b568441a13d92d4df2d597760c6b7cde50",
      "added_by": "cfbs add",
      "steps": [
        "copy policy/main.cf services/inventory-fips-mode-setup/main.cf",
        "json augments.json def.json"
      ]
    },
    {
      "name": "inventory-kernel-boot-params",
      "description": "Adds reporting data (inventory) for kernel parameters set during system boot.",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-kernel-boot-params",
      "by": "https://github.com/nickanderson",
      "version": "0.1.2",
      "commit": "ab79409970b97831cfb9552d98ca6a8f455e11d4",
      "added_by": "cfbs add",
      "steps": [
        "copy policy/main.cf services/inventory-kernel-boot-params/main.cf",
        "json augments.json def.json"
      ]
    },
    {
      "name": "inventory-kernel-settings-sysctl-conf",
      "description": "Adds reporting data (inventory) for settings from the /etc/sysctl.conf file.",
      "tags": ["inventory", "kernel"],
      "repo": "https://github.com/nickanderson/cfengine-sysctl",
      "by": "https://github.com/nickanderson",
      "version": "1.0.0",
      "commit": "69149b9d15874c4f584441cd40019a79a92ad8f2",
      "subdirectory": "policy/inventory-kernel-settings-sysctl-conf",
      "added_by": "cfbs add",
      "steps": [
        "copy ./main.cf services/inventory-kernel-settings-sysctl-conf/",
        "copy ./README.org services/inventory-kernel-settings-sysctl-conf/",
        "json ./cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-kernel-settings-sysctl-current",
      "description": "Adds reporting data (inventory) for sysctl settings current state.",
      "tags": ["inventory", "kernel", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-sysctl",
      "by": "https://github.com/nickanderson",
      "version": "1.0.0",
      "commit": "69149b9d15874c4f584441cd40019a79a92ad8f2",
      "subdirectory": "policy/inventory-kernel-settings-sysctl-current",
      "added_by": "cfbs add",
      "steps": [
        "copy ./main.cf services/inventory-kernel-settings-sysctl-current/",
        "copy ./README.org services/inventory-kernel-settings-sysctl-current/",
        "json ./cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-lastlog",
      "description": "Adds reporting data (inventory) for users who have logged in and when.",
      "tags": ["inventory", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-lastlog",
      "by": "https://github.com/nickanderson",
      "version": "0.1.1",
      "commit": "7436a6ca9d1a159e6083768b9c06d9b1cbb189a0",
      "added_by": "cfbs add",
      "steps": [
        "copy policy/main.cf services/inventory-lastlog/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "library-parsed-local-groups",
      "description": "Parses local group from the /etc/group file on the system.",
      "tags": ["supported", "library"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "3028f74671c0bd8c8668a5b18245191439b0bad9",
      "subdirectory": "parsed_etc_group",
      "added_by": "inventory-local-groups",
      "steps": [
        "copy ./parsed_etc_group.cf services/local-groups/parsed_etc_group/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-local-groups",
      "description": "Adds reporting data (inventory) for the local groups on the system.",
      "tags": ["inventory", "supported"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "633fdc37f6369461fcd866ad69eb84cd9feb595c",
      "subdirectory": "inventory-local-groups",
      "dependencies": ["library-parsed-local-groups"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory-local-groups.cf services/local-groups/inventory-local-groups/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "library-parsed-local-users",
      "description": "Parses local users from /etc/passwd on the system with their attributes from /etc/shadow.",
      "tags": ["supported", "library"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.5",
      "commit": "ede282c34083ab807543aa734b1142228ab98993",
      "subdirectory": "parsed_etc_passwd_shadow",
      "added_by": "inventory-local-users",
      "steps": [
        "copy ./parsed_etc_passwd_shadow.cf services/local-users/parsed_etc_passwd_shadow/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-local-users",
      "description": "Adds reporting data (inventory) for the local users on the system with their attributes.",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.4",
      "commit": "3b50be1e5ab09578109921b8f287603b37811350",
      "subdirectory": "inventory_passwd_users_all",
      "dependencies": ["library-parsed-local-users"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory_passwd_users_all.cf services/local-users/inventory_passwd_users_all/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-local-users-locked",
      "description": "Adds reporting data (inventory) for the local users on the system that are locked.",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.4",
      "commit": "3b50be1e5ab09578109921b8f287603b37811350",
      "subdirectory": "inventory_passwd_users_locked",
      "dependencies": ["library-parsed-local-users"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory_passwd_users_locked.cf services/local-users/inventory_passwd_users_locked/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-local-users-non-root-has-uid-0",
      "description": "Adds reporting data (inventory) for the non-root users that have uid 0.",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.5",
      "commit": "fef5d94170f8119eda8f5bf8316acf5896fbac22",
      "subdirectory": "inventory_non_root_users_with_uid_zero",
      "dependencies": ["library-parsed-local-users"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory-non-root-users-with-uid-zero.cf services/local-users/inventory_non_root_users_with_uid_zero/inventory-non-root-users-with-uid-zero.cf",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-local-users-password-empty",
      "description": "Adds reporting data (inventory) for the local users on the system that do not have a password set.",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.4",
      "commit": "3b50be1e5ab09578109921b8f287603b37811350",
      "subdirectory": "inventory_passwd_users_password_empty",
      "dependencies": ["library-parsed-local-users"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory_passwd_users_password_empty.cf services/local-users/inventory_passwd_users_password_empty/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-local-users-password-hashing-algorithm",
      "description": "Adds reporting data (inventory) for password hashing algorithms in use by local users.",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.4",
      "commit": "3b50be1e5ab09578109921b8f287603b37811350",
      "subdirectory": "inventory_passwd_users_password_hashing_algorithm",
      "dependencies": ["library-parsed-local-users"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory_local_user_pw_hashing_algorithm.cf services/local-users/inventory_passwd_users_password_hashing_algorithm/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-openssl-versions",
      "description": "Adds an inventory attribute containing all versions of OpenSSL found on the system.",
      "tags": ["inventory", "security", "experimental"],
      "repo": "https://github.com/olehermanse/cfengine-inventory-openssl-versions",
      "by": "https://github.com/olehermanse",
      "version": "0.2.0",
      "commit": "5c22bfafb037fa96ab59574ef0da3b161167d883",
      "added_by": "cfbs add",
      "steps": [
        "copy inventory-openssl-versions.cf services/cfbs/modules/inventory-openssl-versions/inventory-openssl-versions.cf",
        "policy_files services/cfbs/modules/inventory-openssl-versions/inventory-openssl-versions.cf",
        "bundles inventory_openssl_versions:inventory_openssl_versions"
      ]
    },
    {
      "name": "inventory-ssh-host-key-fingerprints",
      "description": "Adds reporting data (inventory) for the SSH host key fingerprints.",
      "tags": ["inventory", "security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-ssh",
      "by": "https://github.com/nickanderson",
      "version": "0.0.2",
      "commit": "dbd948d795a32b29dcbfad54d9f16326f485d094",
      "subdirectory": "policy/inventory/host-key-fingerprints",
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory-ssh-host-key-fingerprints.cf services/ssh/inventory/host-key-fingerprints/inventory-ssh-host-key-fingerprints.cf",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-sudoers",
      "description": "Adds reporting data (inventory) for users with sudo access.",
      "tags": ["supported", "inventory", "security", "sudo"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-sudoers",
      "by": "https://github.com/nickanderson",
      "version": "1.0.2",
      "commit": "ba9768f0e09914e41dae95fbf81caed90c1e6ed4",
      "added_by": "cfbs add",
      "steps": [
        "copy ./policy/main.cf services/inventory-sudoers/main.cf",
        "json ./cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-systemd",
      "description": "Adds reporting data (inventory) for interesting things from systemd.",
      "tags": ["supported", "inventory", "systemd"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-systemd",
      "by": "https://github.com/nickanderson",
      "version": "0.1.0",
      "commit": "4b9c0708173d3b5f0855a76063781e2258465788",
      "added_by": "cfbs add",
      "steps": [
        "copy ./policy/main.cf services/inventory-systemd/main.cf",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-unshadowed-users",
      "description": "Adds reporting data (inventory) on local users in /etc/passwd not using /etc/shadow for their password.",
      "tags": ["supported", "inventory", "security", "compliance"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/nickanderson",
      "version": "1.0.2",
      "commit": "cff9325f0b12e914fead75c7b30092b0d91cee64",
      "subdirectory": "security/inventory-unshadowed-users",
      "dependencies": ["library-parsed-local-users"],
      "added_by": "cfbs add",
      "steps": [
        "copy policy/main.cf services/cfbs/inventory-unshadowed-users/",
        "policy_files services/cfbs/inventory-unshadowed-users/",
        "bundles inventory_unshadowed_users:main"
      ]
    },
    {
      "name": "inventory-writable-directories-in-root-path",
      "description": "Reporting data (inventory) directories in root's $PATH that are world or group writable.",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-writable-directories-in-root-path",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "11fe0552d0cfde9d7280c629cea18cb0e2fd2a8b",
      "subdirectory": "./inventory-writable-directories-in-root-path",
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory-world-group-writable-root-path.cf services/world-writable-directories-in-root-path/",
        "json ./cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-yum-update-info",
      "description": "Adds information about security updates from 'yum updateinfo' to inventory.",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/vpodzime/cfengine-security-hardening",
      "by": "https://github.com/vpodzime",
      "version": "0.0.1",
      "commit": "c89da2dbdf2f8a4baf7b6646d2e15e98a00ff365",
      "subdirectory": "inventory-yum-update-info",
      "dependencies": ["autorun"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory_yum_update_info.cf services/autorun/inventory_yum_update_info.cf"
      ]
    },
    {
      "name": "ntp-maxpoll",
      "description": "Ensures that maxpoll is configured (to 10 by default).",
      "tags": ["supported", "security", "management"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.3",
      "commit": "e2519214e8a29c7f37a36ca8a4beec687712448d",
      "subdirectory": "./ntp-maxpoll",
      "added_by": "cfbs add",
      "steps": [
        "copy ./ntp-maxpoll.cf services/security-hardening/ntp-maxpoll/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "root-path-enforce-permissions",
      "description": "Enforces that directories in root's $PATH are not world or group writable.",
      "tags": ["supported", "management", "security"],
      "repo": "https://github.com/nickanderson/cfengine-writable-directories-in-root-path",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "11fe0552d0cfde9d7280c629cea18cb0e2fd2a8b",
      "subdirectory": "./root-path-enforce-permissions",
      "dependencies": ["inventory-writable-directories-in-root-path"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./root-path-enforce-group-other-not-writable.cf services/world-writable-directories-in-root-path/",
        "json ./cfbs/def.json def.json"
      ]
    },
    {
      "name": "library-sshd-config",
      "description": "Library used by other modules to manage sshd configuration.",
      "tags": ["library", "security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-ssh",
      "by": "https://github.com/nickanderson",
      "version": "0.1.0",
      "commit": "abff34c08bf27af56c4c3939bbb6f848eac7fb8d",
      "subdirectory": "modules/library-sshd-config",
      "added_by": "ssh-ciphers-strong",
      "steps": [
        "copy ./global-key-values.cf services/library-sshd-config/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "ssh-ciphers-strong",
      "description": "Ensures that the SSH daemon uses strong ciphers.",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.4",
      "commit": "7c5e3638ddcf2ba097644eefe0a3bc9d7f2269e6",
      "subdirectory": "./ssh-ciphers-strong",
      "dependencies": ["library-sshd-config"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./ssh-ciphers-strong.cf services/security-hardening/ssh-ciphers-strong/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "ssh-protocol-2",
      "description": "Ensures that the SSH daemon uses SSH protocol 2.",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.3",
      "commit": "124b01041a3d45010ac20912338795e81e2a06fe",
      "subdirectory": "./ssh-protocol-2",
      "dependencies": ["library-sshd-config"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./ssh-protocol-2.cf services/security-hardening/ssh-protocol-2/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "tmp-file-age",
      "description": "Reporting data (inventory) and removal of old files in the /tmp directory.",
      "tags": ["supported", "inventory", "management", "security", "tmp"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "56a7c149f33808db6796de77eff6eb0502c01e61",
      "subdirectory": "./tmp-file-age",
      "added_by": "cfbs add",
      "steps": [
        "copy ./tmp-file-age.cf services/security-hardening/tmp-file-age/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "tmp-nosuid",
      "description": "Makes sure /tmp is mounted with the 'nosuid' option.",
      "tags": ["supported", "security", "compliance", "tmp"],
      "repo": "https://github.com/vpodzime/cfengine-security-hardening",
      "by": "https://github.com/vpodzime",
      "version": "0.0.2",
      "commit": "5be7c3ef332138b5717231d289bda59449b66d5c",
      "subdirectory": "tmp-nosuid",
      "dependencies": ["autorun"],
      "added_by": "cfbs add",
      "steps": ["copy ./tmp_nosuid.cf services/autorun/tmp_nosuid.cf"]
    }
  ],
  "git": true
}
